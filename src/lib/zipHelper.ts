import JSZip from 'jszip';
import { saveAs } from 'file-saver';
import { GeneratedWebsite } from './types';

export async function downloadWebsiteAsZip(
  website: GeneratedWebsite,
  filename: string = 'portfolio-website'
): Promise<void> {
  try {
    const zip = new JSZip();
    
    // Add the main HTML file
    zip.file('index.html', website.html);
    
    // If CSS and JS are separate, add them as individual files
    if (website.css && website.css.trim()) {
      zip.file('styles.css', website.css);
    }
    
    if (website.js && website.js.trim()) {
      zip.file('script.js', website.js);
    }
    
    // Add a README with deployment instructions
    const readme = `# ${filename}

This is your generated portfolio website!

## Files included:
- index.html - Your main website file
${website.css ? '- styles.css - Stylesheet (if separated)' : ''}
${website.js ? '- script.js - JavaScript code (if separated)' : ''}

## How to deploy:

### Option 1: Netlify (Recommended)
1. Go to https://netlify.com
2. Drag and drop this entire folder onto the Netlify deploy area
3. Your site will be live in seconds!

### Option 2: Vercel
1. Go to https://vercel.com
2. Import this project or drag and drop the folder
3. Your site will be deployed automatically

### Option 3: GitHub Pages
1. Create a new repository on GitHub
2. Upload these files to the repository
3. Go to Settings > Pages
4. Set source to main branch
5. Your site will be available at username.github.io/repository-name

### Option 4: Local Testing
Simply open the index.html file in your web browser to preview locally.

---
Generated by PortfoliAI âœ¨
`;
    
    zip.file('README.md', readme);
    
    // Generate the zip file and trigger download
    const content = await zip.generateAsync({ type: 'blob' });
    saveAs(content, `${filename}.zip`);
    
  } catch (error) {
    console.error('Error creating zip file:', error);
    throw new Error('Failed to create download package');
  }
}

export function generateWebsitePreviewUrl(html: string): string {
  // Create a blob URL for previewing the generated website
  const blob = new Blob([html], { type: 'text/html' });
  return URL.createObjectURL(blob);
}